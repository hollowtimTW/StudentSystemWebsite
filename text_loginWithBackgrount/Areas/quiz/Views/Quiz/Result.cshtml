@using Newtonsoft.Json
@{
    var studentId = User.Claims.FirstOrDefault(c => c.Type == "StudentId")?.Value;
    ViewData["Title"] = "測驗結果";

    var Quiz = Model.Quiz;
    var Record = Model.Record;
    var Questions = Model.Questions;
    var StudentAnswer = Model.StudentAnswer;

    var Answers = Model.StudentAnswer.Answers;
    var answersJson = JsonConvert.SerializeObject(Answers);

}

@section Styles{
    <style>

        .option-div {
            padding: 0.5rem 1rem; 
            margin-bottom: 0.25rem; 
            border-radius: 0.25rem; 
        }

        .accordion-button{
            background-color: #F0F0F0;
            ;
            font-size: 1.2rem;
            font-weight: bold;
        }
         
        .selected {
            background-color: #ADADAD;
            color: #212529 ;
        }

        .correct {
            background-color: #007bff;
            color: white; 
        }

        .selected.correct {
            background-color: #28a745;
            color: white;
        }


        .wrong-answer .accordion-button {
            background-color: #dc3545; 
            color: white;
        }



        #scoreChart {
            max-height: 300px;
            max-width: 300px;
        }


        .color-box {
            width: 20px;
            height: 20px;
            display: inline-block;
            margin-right: 10px;
        }


        .analyze-context{
            background-color: #4F4F4F;
            color: white;
            border-radius:5px;
            padding:2% 10%;
            display:none;
        }

    </style>

}

@section BreadcrumbsSection {
    <div class="breadcrumbs">
        <div class="page-header d-flex align-items-center" style="background-image: url('');">
            <div class="container position-relative">
                <div class="row d-flex justify-content-center">
                    <div class="col-lg-6 text-center">
                        <h2>@ViewData["Title"]</h2>
                    </div>
                </div>
            </div>
        </div>
        <nav>
            <div class="container d-flex justify-content-between align-items-center">

                <ol>
                    <li><a asp-area="" asp-controller="Template" asp-action="Index">首頁</a></li>
                    <li><a asp-area="quiz" asp-controller="Go" asp-action="Record">測驗紀錄</a></li>
                    <li>@ViewData["Title"]</li>
                </ol>
            </div>
        </nav>
    </div>
}
<div class="container mt-3 mb-5 ">

    <div class="row mb-3">

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">測驗名稱：@Quiz.FQname</h5>
                    <div>答題率: @((int)(Record.FRate * 100)) % </div>
                </div>
            </div>
            <div class="container m-3 ">
                <div class="row">
                    <div class="col-md-12">
                        <div class="color-box selected"></div>選擇選項
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="color-box correct"></div>正確選項
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="color-box selected correct"></div>答對選項
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 d-flex justify-content-center">
            <canvas id="scoreChart"></canvas>
        </div>
    </div>



    <div class="accordion" id="questionAccordion">
         
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            var question = Model.Questions[i];
            <div class="accordion-item @(question.Answer.Contains(i) ? "correct-answer" : "")">
                <h2 class="accordion-header" id="heading@(i)">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(i)" aria-expanded="true" aria-controls="collapse@(i)">
                        @($"問題 {i + 1}：{question.QuestionText}")
                    </button>
                </h2>
                <div id="collapse@(i)" class="accordion-collapse collapse" aria-labelledby="heading@(i)" data-bs-parent="#questionAccordion">
                    <div class="accordion-body pb-0">
                        @for (int j = 0; j < question.Options.Count; j++)
                        {
                            var option = question.Options[j];
                            bool isSelected = StudentAnswer.Answers?.Count != 0 && StudentAnswer.Answers[i]?.Contains(j) == true;
                            var isCorrect = question.Answer.Contains(j);
                            <div class="option-div @(isSelected ? "selected" : "")  @(isCorrect ? "correct" : "")">(@(j + 1)) @option</div>
                        }
                    </div>

                    <div class="row justify-content-end m-1">
                        <div class="col-auto">
                            <select class="form-select" id="dropdownMenu" aria-label="Select option">
                                <option value="0">OpenAI</option>
                                <option value="1">Gemini</option>
                                <option value="2">Claude</option>
                            </select>
                        </div>
                        <div class="col-auto">
                            <button class="btn btn-secondary analyzeBtn">
                                <span class="spinner-border spinner-border-sm" role="status"style="display: none;"></span>
                                AI解析
                            </button>
                        </div>
                    </div>

                    <div class="analyze-context m-2">
                        123213213213
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {

            $('.accordion-item').each(function () {
                var $question = $(this);
                var hasSelectedButIncorrect = false;
                var notAllCorrectSelected = false;

                var correctOptionsCount = $question.find('.option-div.correct').length;
                var selectedCorrectOptionsCount = $question.find('.option-div.correct.selected').length;

                $question.find('.option-div').each(function () {
                    var $option = $(this);

                    if ($option.hasClass('selected') && !$option.hasClass('correct')) {
                        hasSelectedButIncorrect = true;
                    }
                });

                if (selectedCorrectOptionsCount < correctOptionsCount) {
                    notAllCorrectSelected = true;
                }
                if (hasSelectedButIncorrect || notAllCorrectSelected) {
                    $question.addClass('wrong-answer');
                }
            });


            var ctx = $('#scoreChart').get(0).getContext('2d');

            var rate = @Record.FRate*100;

            var scoreChart = new Chart(ctx, {
                type: 'doughnut', 
                data: {
                    labels: ['正確', '錯誤'],
                    datasets: [{
                        label: '答題率',
                        data: [rate, 100 - rate],
                        backgroundColor: [
                            '#007bff',
                            '#dc3545'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                }
            });


            $(".analyzeBtn").click(function () {
                const button = $(this);
                const spinner = button.find('.spinner-border');
                const accordionItem = button.closest('.accordion-item');
                const analyzeContext = accordionItem.find('.analyze-context');
                const questionText = accordionItem.find('.accordion-button').text().trim();
                const optionsText = accordionItem.find('.option-div').map(function () {
                    return $(this).text().trim();
                }).get().join(' ');
                const selectedOption = accordionItem.find('#dropdownMenu').val();
                const content = questionText + optionsText + ",請解析這道題目(150字以內)";

                if (button.hasClass('disabled')) {
                    return; // 如果按鈕已經被禁用，則不執行任何操作
                }

                // 禁用按鈕
                button.addClass('disabled');
                spinner.show();

                var formData = new FormData();
                formData.append('content', content);

                var url;
                switch (selectedOption) {
                    case '0':
                        url = '/Api/Ai/SendOpenAi';
                        break;
                    case '1':
                        url = '/Api/Ai/SendGemini';
                        break;
                    case '2':
                        url = '/Api/Ai/SendClaude';
                        break;
                    default:
                        url = '/Api/Ai/SendOpenAi'; // 默認使用OpenAI
                }

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log(response)
                        analyzeContext.show();
                        analyzeContext.text(response);
                        // 啟用按鈕
                        button.removeClass('disabled');
                        spinner.hide();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                        // 啟用按鈕
                        button.removeClass('disabled');
                        spinner.hide();
                    }
                });
            });




        });
    </script>
}
