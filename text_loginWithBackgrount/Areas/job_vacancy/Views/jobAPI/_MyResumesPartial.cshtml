@model List<MyResumesViewModel>
<style>
    <link href="~/css/job_vacancy/jobcommonstyle.css" rel="stylesheet"/>
    .swl-select{
        width:70%;
        border-radius: 8px;
    }
</style>

<div id="tab1" class="tab-page active">
    <div class="container">
        <div class="row gy-4">

            @foreach (var viewModel in Model)
            {
                <div class="col-lg-4 col-md-6">
                    <div class="resume-item position-relative">
                        <div>
                            <button type="button" class="btn btn-circle btn-float1" onclick="deleteResume(@viewModel.ResumeID)"><i class="bi bi-x-lg"></i></button>
                            <button type="button" class="btn btn-circle btn-float2" onclick="exportResume(@viewModel.ResumeID)"><i class="bi bi-filetype-pdf"></i></button>
                        </div>
                        <div class="pointer-link" onclick="popup_edit(@viewModel.ResumeID)">
                            <div class="icon">
                                <i class="bi bi-file-earmark-person"></i>
                            </div>
                            <div>
                                <h3>@viewModel.ResumeTitle</h3>
                                <h6 class="card-subtitle mb-2 text-muted">@viewModel.LastUpdate?.ToString("yyyy/MM/dd HH:mm:ss")</h6>
                                <span>@viewModel.HopeJobTitle</span> <span>@viewModel.WorkType</span>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="col-lg-4 col-md-6 pointer-link" onclick="popup_create()">
                <div class="resume-item position-relative d-flex flex-column align-items-center create-resume">
                    <div class="icon">
                        <i class="bi bi-file-earmark-plus-fill"></i>
                    </div>
                    <h3>新增履歷</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal 互動視窗：新增履歷 -->
<div class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" id="createModal" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">新增履歷</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="btnCloseCreate"></button>
            </div>
            <div class="modal-body" id="create_context">
                <!-- 互動視窗內容 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" id="btnCancelCreate">取消編輯</button>
                <input type="submit" class="btn btn-normal" id="btnSummitCreate" value="儲存" />
            </div>
        </div>
    </div>
</div>


<!-- Modal 互動視窗：編輯履歷 -->
<div class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" id="editModal" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">編輯履歷</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="btnCloseEdit"></button>
            </div>
            <div class="modal-body" id="edit_context">
                <!-- 互動視窗內容 -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" id="btnCancelEdit">取消編輯</button>
                <input type="submit" class="btn btn-normal" id="btnSummitEdit" value="儲存" />
            </div>
        </div>
    </div>
</div>

@* 驗證相關 - 不確定有沒有用 *@
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>

    // ==== 匯出履歷 ====
    function exportResume(resumeId) {
        Swal.fire({
            title: '是否將此履歷匯出為PDF檔？',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: '確定',
            cancelButtonText: '取消',
            customClass: {
                confirmButton: 'btn btn-normal',
                cancelButton: 'btn btn-cancel'
            },
            confirmButtonColor: '#008374',
            cancelButtonColor: '#6c757d'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/job_vacancy/jobapi/ExportToPDF/" + resumeId,
                    type: 'GET',
                    success: function (result) {
                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: '匯出成功',
                                text: result.message,
                                customClass: {
                                    confirmButton: 'btn btn-normal',
                                },
                                confirmButtonColor: '#008374',
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: '匯出失敗',
                                text: result.message,
                                customClass: {
                                    confirmButton: 'btn btn-normal',
                                },
                                confirmButtonColor: '#008374',
                            });
                        }
                    },
                    error: function (result) {
                        Swal.fire({
                            icon: 'error',
                            title: '匯出失敗',
                            text: result.message,
                            customClass: {
                                confirmButton: 'btn btn-normal',
                            },
                            confirmButtonColor: '#008374',
                        });
                    }
                });
            } else {
                // 不執行任何操作
            }
        });
    };


    // ==== 刪除履歷 ====
    function deleteResume(resumeId) {

        Swal.fire({
            title: "確認刪除履歷？",
            icon: 'warning',
            input: "select",
            inputOptions: {
                '已找到工作': "已找到工作",
                '求職需求變更': "求職需求變更",
                '暫時無求職需求': "暫時無求職需求",
                '不適合在本平台刊登': "不適合在本平台刊登",
                '其他': "其他"
            },
            inputPlaceholder: "請選擇刪除原因",
            showCancelButton: true,
            confirmButtonText: '確定',
            cancelButtonText: '取消',
            customClass: {
                input: 'swl-select',
                confirmButton: 'btn btn-normal',
                cancelButton: 'btn btn-cancel'
            },
            confirmButtonColor: '#008374',
            cancelButtonColor: '#6c757d',
            inputValidator: (value) => {
                return new Promise((resolve) => {
                    if (value) {
                        // 呼叫API
                        $.ajax({
                            url: "/job_vacancy/jobforStudent/Delete/",
                            type: 'POST',
                            data: {
                                //注意！鍵名必須和後端的參數名相同！
                                resumeID: resumeId,
                                deleteReason: value
                            },
                            success: function (result) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '成功',
                                    text: '刪除成功',
                                    customClass: {
                                        confirmButton: 'btn btn-normal',
                                    },
                                    confirmButtonColor: '#008374',
                                });
                                resolve();
                                GetMyResumes();  //重新載入履歷資料
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                if (jqXHR.status == 404) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: '失敗',
                                        text: '未找到這份履歷',
                                        customClass: {
                                            confirmButton: 'btn btn-normal',
                                        },
                                        confirmButtonColor: '#008374',
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: '失敗',
                                        text: '刪除失敗: ' + textStatus,
                                        customClass: {
                                            confirmButton: 'btn btn-normal',
                                        },
                                        confirmButtonColor: '#008374',
                                    });
                                }
                                resolve();
                            }
                        });
                    } else {
                        resolve("請選擇刪除原因");
                    }
                });
            }
        });
    };

    // ==== 呼叫新增視窗的內容 ====
    function popup_create() {

        const createContext = $("#create_context");
        const url = "/job_vacancy/jobforStudent/Create/" + studentID;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (result) {
                console.log('呼叫新增視窗 success' + studentID);

                createContext.html(result);
                $('#createModal').modal('show');

                //設定自傳編輯區字數顯示
                const textarea = document.querySelector('.word_count_textarea');
                const wordCount = document.getElementById('word-count');
                const maxLength = 1000;
                wordCount.textContent = textarea.value.length; // 初始化字數顯示

                textarea.addEventListener('input', function () {
                    let content = textarea.value;
                    let currentLength = content.length; // 獲取當前字數

                    // 如果超過最大字數，則截斷內容並更新 textarea 內容與字數顯示
                    if (currentLength > maxLength) {
                        textarea.value = content.slice(0, maxLength);
                        currentLength = textarea.value.length;
                    }

                    // 更新字數顯示
                    wordCount.textContent = currentLength;
                });
            },
            error: function (error) {
                console.error('呼叫新增視窗 error', error);
                Swal.fire({
                    icon: 'error',
                    title: '失敗',
                    text: '請求失敗：' + error.responseText,
                    customClass: {
                        confirmButton: 'btn btn-normal',
                    },
                    confirmButtonColor: '#008374',
                });
            }
        });
    }

    // ==== 取消新增 ====
    document.getElementById('btnCancelCreate').addEventListener('click', function () {
        Swal.fire({
            title: '確認取消編輯',
            text: '取消編輯將不會儲存修改，確定要取消嗎？',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: '確定取消',
            cancelButtonText: '繼續編輯',
            customClass: {
                confirmButton: 'btn btn-cancel',
                cancelButton: 'btn btn-normal'
            },
            confirmButtonColor: '#6c757d',
            cancelButtonColor: '#008374'
        }).then((result) => {
            if (result.isConfirmed) {
                $('#create_context').empty(); //清空partialview的內容
                document.getElementById('btnCloseCreate').click();
            } else {
                // 使用者點擊了 "繼續編輯" 按鈕，不執行任何操作
            }
        });
    });

    // ==== 提交新增表單 ====
    document.getElementById('btnSummitCreate').addEventListener('click', async (event) => {

        event.preventDefault();  //停止預設行為

        const formData = new FormData(document.getElementById('formCreate'));

        //有無工作經驗
        checkbox = document.getElementById('workExpCheck');
        let workExpValue = checkbox.checked ? 'N' : 'Y';
        formData.set('WorkExperience', workExpValue);

        //履歷表工作經驗（resumeWorkIDForSummit為全域變數）
        resumeWorkIDForSummit.forEach(id => {
            formData.append('ThisResumeWorkExpIDs', id);
        });

        //輪班
        checkbox = document.getElementById('workShiftCheck');
        let workShiftValue = checkbox.checked ? 'Y' : 'N';
        formData.set('WorkShift', workShiftValue);

        //工作時段
        let selectedWorkTimes = [];
        $('input[name="WorkTime"]:checked').each(function() {
            selectedWorkTimes.push($(this).val());
        });
        let worktime = selectedWorkTimes.join(',');
        formData.set('WorkTime', worktime);

        //希望薪資
        let selectedValue;
        if (hopeSalary3.checked) {
            selectedValue = document.getElementById('salaryInput').value;
        }
        else {
            selectedValue = document.querySelector('input[name="HopeSalary"]:checked')?.value;
        }
        formData.set('HopeSalary', selectedValue);

        const url = '/job_vacancy/jobforStudent/CreateResume/';
        const response = await fetch(url, {
            body: formData,
            method: 'POST'
        });
        const data = await response.json();
        if (response.ok) {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: '新增履歷成功',
                    customClass: {
                        confirmButton: 'btn btn-normal',
                    },
                    confirmButtonColor: '#008374',
                });

                $('#create_context').empty(); //清空partialview的內容
                document.getElementById('btnCloseCreate').click();  //關閉modal
                GetMyResumes();  //重新載入履歷資料
            } else {
                Swal.fire({
                    icon: 'error',
                    title: '新增失敗',
                    text: data.message,
                    customClass: {
                        confirmButton: 'btn btn-normal',
                    },
                    confirmButtonColor: '#008374',
                });
            }
        } else {
            Swal.fire({
                icon: 'error',
                title: '新增失敗',
                text: data.message,
                customClass: {
                    confirmButton: 'btn btn-normal',
                },
                confirmButtonColor: '#008374',
            });
        }
    });

    // ==== 呼叫編輯視窗的內容 ====
    function popup_edit(resumeId) {

        const editContext = $("#edit_context");
        const detailUrl = "/job_vacancy/jobforStudent/EditResume/" + resumeId;

        $.ajax({
            type: 'GET',
            url: detailUrl,
            success: function (result) {
                console.log('呼叫編輯視窗 success');

                editContext.html(result);
                $('#editModal').modal('show');

                //設定自傳編輯區字數顯示
                const textarea = document.querySelector('.word_count_textarea');
                const wordCount = document.getElementById('word-count');
                const maxLength = 1000;
                wordCount.textContent = textarea.value.length; // 初始化字數顯示

                textarea.addEventListener('input', function () {
                    let content = textarea.value;
                    let currentLength = content.length; // 獲取當前字數

                    // 如果超過最大字數，則截斷內容並更新 textarea 內容與字數顯示
                    if (currentLength > maxLength) {
                        textarea.value = content.slice(0, maxLength);
                        currentLength = textarea.value.length;
                    }

                    // 更新字數顯示
                    wordCount.textContent = currentLength;
                });

            },
            error: function (error) {
                console.error('呼叫編輯視窗 error', error);
                editContext.html(`<div class="alert alert-danger" role="alert">請求失敗：${error.statusText}</div>`);
            }
        });
    }

    // ==== 取消編輯 ====
    document.getElementById('btnCancelEdit').addEventListener('click', function () {
        Swal.fire({
            title: '確認取消編輯',
            text: '取消編輯將不會儲存修改，確定要取消嗎？',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: '確定取消',
            cancelButtonText: '繼續編輯',
            customClass: {
                confirmButton: 'btn btn-cancel',
                cancelButton: 'btn btn-normal'
            },
            confirmButtonColor: '#6c757d',
            cancelButtonColor: '#008374'
        }).then((result) => {
            if (result.isConfirmed) {
                $('#edit_context').empty(); //清空 履歷編輯partialview 的內容
                document.getElementById('btnCloseEdit').click();
            } else {
                // 使用者點擊了 "繼續編輯" 按鈕，不執行任何操作
            }
        });
    });

    // ==== 提交編輯表單 ====
    document.getElementById('btnSummitEdit').addEventListener('click', async (event) => {

        event.preventDefault();  //停止預設行為

        const formData = new FormData(document.getElementById('formEdit'));

        //有無工作經驗
        checkbox = document.getElementById('workExpCheck');
        let workExpValue = checkbox.checked ? 'N' : 'Y';
        formData.set('WorkExperience', workExpValue);

        //履歷表工作經驗（resumeWorkIDForSummit為全域變數）
        resumeWorkIDForSummit.forEach(id => {
            formData.append('ThisResumeWorkExpIDs', id);
        });

        //輪班
        checkbox = document.getElementById('workShiftCheck');
        let workShiftValue = checkbox.checked ? 'Y' : 'N';
        formData.set('WorkShift', workShiftValue);
        
        //工作時段
        let selectedWorkTimes = [];
        $('input[name="WorkTime"]:checked').each(function() {
            selectedWorkTimes.push($(this).val());
        });
        let worktime = selectedWorkTimes.join(',');
        formData.set('WorkTime', worktime);

        //希望薪資
        let selectedValue;
        if (hopeSalary3.checked) {
            selectedValue = document.getElementById('salaryInput').value;
        }
        else {
            selectedValue = document.querySelector('input[name="HopeSalary"]:checked')?.value;
        }
        formData.set('HopeSalary', selectedValue);

        // for (const pair of formData.entries()) {
        //     console.log(pair[0] + ': ' + pair[1]);
        // }
        // return;

        const url = '/job_vacancy/jobforStudent/UpdateResume/';
        const response = await fetch(url, {
            body: formData,
            method: 'POST'
        });
        const data = await response.json();
        if (response.ok) {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: '修改履歷成功',
                    customClass: {
                        confirmButton: 'btn btn-normal',
                    },
                    confirmButtonColor: '#008374',
                });

                $('#edit_context').empty(); //清空partialview的內容
                document.getElementById('btnCloseEdit').click();  //關閉modal
                GetMyResumes();  //重新載入履歷資料
            } else {
                Swal.fire({
                    icon: 'error',
                    title: '修改失敗',
                    text: data.message,
                    customClass: {
                        confirmButton: 'btn btn-normal',
                    },
                    confirmButtonColor: '#008374',
                });
            }
        } else {
            Swal.fire({
                icon: 'error',
                title: '修改失敗',
                text: data.message,
                customClass: {
                    confirmButton: 'btn btn-normal',
                },
                confirmButtonColor: '#008374',
            });
        }
    });
</script>