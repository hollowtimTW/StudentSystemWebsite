@model Class_system_Backstage_pj.Models.T課程班級科目

@section Styles {

    <style>
        #remoteVideo {
            width: 100%;
            height: auto;
            max-width: 800px;
            max-height: 450px;
            box-shadow: 0px 0px 3px 1px rgba(0,0,0,0.2);
            background-color: white;
            border-radius: 30px;
            display: none;
            margin: auto;
        }

        #waitingGif {
            width: 100%;
            height: auto;
            max-width: 800px;
            max-height: 450px;
            box-shadow: 0px 0px 3px 1px rgba(0,0,0,0.2);
            background-color: white;
            border-radius: 30px;
            display: block;
            margin: auto;
        }

        #content {
            padding: 10px;
            width: 100%;
            height: 100vh;
            text-align: center;
            display: flex;
            justify-content: center; /* 將子元素水平置中 */
            align-items: center; /* 將子元素垂直置中 */
            height: 100vh;

        }

        h3 {
            margin-top: 20px;
            font-size: 24px;
            color: #333;
            font-family: Arial, sans-serif; 
            text-shadow: 1px 1px 1px rgba(0,0,0,0.1); 
        }

            h3 span {
                margin-right: 10px;
                text-transform: uppercase;
                font-weight:bold;
            }

                h3 span:last-child {
                    margin-right: 0; 
                }

    </style>
}

<div id="content">
    <div>
        <h3>
            <span class="text-black">授課科目:</span><span style="color:#008374;font-weight:bold;">@Model.科目.科目名稱</span>
            <span class="text-black">授課老師:</span> <span style="color:#008374;font-weight:bold;">@Model.老師.姓名</span><span class="text-black">老師</span>
        </h3>
   
        <img id="waitingGif" src="https://cdn.dribbble.com/users/1478651/screenshots/9683496/media/b921a805a76e70f0c36f0410310be009.gif">
        <video id="remoteVideo" autoplay resize></video>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.10/signalr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/1.3.1/peerjs.min.js"></script>

    <script>
        let connection;
        let groupName;

        $(function () {
            connection = new signalR.HubConnectionBuilder().withUrl("/StreamHub").build();

            let peer;
            let studentPeerId;

            connection.start()
                .then(function () {
                    console.log("SignalR connection established.");

                    //在sinnnalr建立連線後就馬上建立peerId
                    peer = new Peer({
                        config: {
                            iceServers: [
                                { urls: 'stun:stun.l.google.com:19302' },
                                {
                                    urls: "turns:global.relay.metered.ca:443?transport=tcp",
                                    username: "73bbff3c8731ebccf9f03eae",
                                    credential: "4Lc/Nvbuux92bsEG",
                                },
                            ]
                        }
                    });

                    //peer綁定事件，當peer成功建立後，自動產生peer的objectId，並且存在studentPeerId變數中，馬上向後端確認是否授課老師有創建連線了
                    peer.on('open', function (id) {
                        studentPeerId = id;
                        console.log('Peer instance is ready with ID: ' + studentPeerId);
                        return connection.invoke("checkGroup", '@ViewBag.classCourseId', studentPeerId);
                    });

                    //peer綁定事件，當peer建立失敗該如何處理
                    peer.on('error', function (err) {
                        console.error('Error in Peer instance: ', err);
                    });

                    //peer綁定事件，老師端成功呼叫，後續的處理
                    peer.on('call', function (call) {

                        console.log('Received a call.');
                        call.answer();

                        //call的綁定事件，老師端開始傳送stream
                        call.on('stream', function (remoteStream) {

                            console.log('Received remote stream.');

                            var remoteVideo = document.getElementById('remoteVideo');
                            var waitingGif = document.getElementById('waitingGif');
                            remoteVideo.srcObject = remoteStream;
                            remoteVideo.style.display = 'block';
                            waitingGif.style.display = 'none';
                            //開始撥放
                            remoteVideo.play().catch(error => console.error('Error playing video', error));

                        });
                        //call的綁定事件，call錯誤處理
                        call.on('error', function (err) {
                            console.error('Call error: ', err);
                        });
                    });

                })
                .catch(function (error) {
                    console.error("Error during SignalR or Peer operations: ", error);
                });

            //確認群組狀態後，給學生使用者顯示目前狀態
            connection.on("groupJoinState", function (data) {
                var obj = JSON.parse(data);
                if (obj.groupName != "") {
                    groupName = obj.groupName;
                } 
                else {
                    console.log(groupName);
                }
                alert(obj.message);
            });


            connection.on("SendPeerIdToteacher", function (data) {
                connection.invoke("SendPeerId", groupName, studentPeerId);
                console.log("SendPeerIdToteacher");
            });


           


        });
    </script>
}