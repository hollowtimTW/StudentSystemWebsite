@model List<VMstoreCarIndex>;
@{
    // 獲取當前星期幾的字符串表示
    DayOfWeek currentDayOfWeek = DateTime.Now.DayOfWeek;
    // 獲取當前時間的小時和分鐘
    int currentHour = DateTime.Now.Hour;
    int currentMinute = DateTime.Now.Minute;
    string dayOfWeekString;
    switch (currentDayOfWeek)
    {
        case DayOfWeek.Sunday:
            dayOfWeekString = "星期日";
            break;
        case DayOfWeek.Monday:
            dayOfWeekString = "星期一";
            break;
        case DayOfWeek.Tuesday:
            dayOfWeekString = "星期二";
            break;
        case DayOfWeek.Wednesday:
            dayOfWeekString = "星期三";
            break;
        case DayOfWeek.Thursday:
            dayOfWeekString = "星期四";
            break;
        case DayOfWeek.Friday:
            dayOfWeekString = "星期五";
            break;
        case DayOfWeek.Saturday:
            dayOfWeekString = "星期六";
            break;
        default:
            dayOfWeekString = "無效日期";
            break;
    }
}
@section Styles {
    <!-- 核心：Tocas UI -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocas/4.2.5/tocas.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocas/4.2.5/tocas.min.js"></script>

    <!-- 字體：Noto Sans TC -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700&display=swap" rel="stylesheet" />
    <style>
        h2.text-start::after {
            content: none; /* 将内容设置为 'none'，即空字符串 */
        }

        .portfolio-wrap {
            position: relative;
            overflow: hidden;
        }

            .portfolio-wrap img {
                width: 100%;
                height: auto;
                transition: transform 0.3s ease;
            }

            .portfolio-wrap:hover img {
                transform: scale(1.05); /* 鼠标悬停时放大图像 */
            }

        #main {
            background-color: #ffff;
        }
    </style>
}
@* 頭部 *@
<div class="is-light">
    <div class="ts-content is-vertically-padded is-tertiary">
        <div class="ts-container">
            @* 上頭標籤區 *@
            <div class="ts-box is-light">
                <div class="ts-app-layout is-horizontal">
                    <div class="cell is-fluid">
                        <div class="ts-content">
                            <div class="input-group mb-3 ts-input is-circular">
                                <input type="text" class="form-control" placeholder="搜尋關鍵字........." aria-label="Recipient's username" aria-describedby="button-addon2" id="searchKeyWord">
                                <button class="ts-button is-icon" onclick="search()">
                                    <span class="ts-icon is-magnifying-glass-icon"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="cell">
                        <div class="ts-content ts-wrap">
                            <button class="ts-button is-start-labeled-icon" data-bs-toggle="offcanvas" data-bs-target="#offcanvasScrolling" aria-controls="offcanvasScrolling" id="btnfavorite">
                                <span class="ts-icon is-heart-icon"></span>
                                我的最愛
                            </button>
                            <button class="ts-button is-start-icon" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasScrollingCar" aria-controls="offcanvasScrollingCar" id="btncart">
                                <span class="ts-icon is-cart-plus-icon"></span>
                                購物車
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="ts-wrap is-center-aligned is-relaxed">
                <div>
                    <span class="ts-icon is-end-spaced is-bullhorn-icon"></span><a class="ts-text is-link is-undecorated is-large text-reset" href="Studentrestaurant?orderby=評論">評價最高</a>
                </div>
                <div>
                    <span class="ts-icon is-end-spaced is-store-icon"></span><a class="ts-text is-link is-undecorated is-large text-reset" href="Studentrestaurant?orderby=新店家">新店家</a>
                </div>
            </div>
        </div>
    </div>@* 上面頭部 *@
</div>
@* 身體 *@
<div style="background-color:#ffff" id="storebody">
    <!-- start 熱門排行 -->
    <section id="testimonials" class="testimonials p-0">
        <div class="container" data-aos="fade-up">

            <div class="section-header p-0">
                <h2 class="text-start p-0 m-0 mt-5">2024熱門餐廳</h2>
            </div>

            <div class="slides-3 swiper" data-aos="fade-up" data-aos-delay="100">
                <div class="swiper-wrapper" id="cardiv">

                    <!-- 輪播卡片1 -->
                    <div class="swiper-slide">
                        <div class="testimonial-wrap">
                            <div class="testimonial-item">
                                <div class="d-flex align-items-center">
                                    <img src="~/images/t訂餐/店家照片/jai西門.jpg" class="testimonial-img flex-shrink-0 img-fluid" alt="" />
                                    <div>
                                        <h3>JAI宅 西門店</h3>
                                        <h4>美式&nbsp;</h4>
                                        <div class="stars">
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                        </div>
                                    </div>
                                </div>
                                <p>
                                    <i class="bi bi-quote quote-icon-left"></i>
                                    最適合情侶約會，家庭聚會、朋友聚會的餐廳，就需要居酒屋的氣氛來帶動，今天要來分享台北必吃居酒屋推薦，一系列日本料理與酒精創造出的完美交響曲
                                    <i class="bi bi-quote quote-icon-right"></i>
                                </p>
                            </div>
                        </div>
                    </div><!-- End testimonial item -->

                </div>
                <!-- 分頁指示器（小圓點） --><!-- 分頁指示器的數量如何生成待研究（swiper-bundle.min.js.map） -->
                <div class="swiper-pagination"></div>
            </div>
        </div>
    </section><!-- End 熱門排行 -->
    <hr />
    <section id="portfolio" class="portfolio">
        <div class="container" data-aos="fade-up">

            <div class="section-header p-0">
                <h2 class="text-start m-0">全部餐廳</h2>
            </div>

            <div class="portfolio-isotope" data-portfolio-filter="*" data-portfolio-layout="masonry" data-portfolio-sort="original-order" data-aos="fade-up" data-aos-delay="100">

                <!-- 放入商家口味標籤分類 -->
                <div>
                    <ul class="portfolio-flters pb-5" id="stylelist">
                        <li data-filter="*" class="filter-active">All</li>
                        @foreach (var tag in Model[0].口味總表)
                        {
                            <li data-filter=".filter-@tag">@tag</li>
                        }

                        <!-- 口味標籤類 -->
                    </ul><!-- End Portfolio Filters -->
                </div>

                <!-- 簡單型圖文卡片（共有12張，分為4類） -->
                <div class="row gy-4 portfolio-container" id="storeCard" style="height:auto">
                    <!-- 注意最後一個class，自訂名稱需對應到上方的分頁標題過濾器 --> <!-- 基礎class="col-xl-4 col-md-6 portfolio-item" -->
                    @foreach (var item in Model)
                    {
                        var filterString = "filter-" + string.Join(" filter-", item.風味列表);
                        string status = "準備中"; // 將status定義在外部

                        <div class="col-xl-4 col-md-6 portfolio-item @filterString">
                            <div class="portfolio-wrap">
                                <a href="/ordering_system/orderforStudent/StoreMeanu/@item.店家id" data-gallery="portfolio-gallery-app">
                                    <img src="@item.餐廳照片" class="img-fluid" alt="@item.店家名稱" style="max-width: 100%;height:357.48px;" />
                                </a>
                                <div class="portfolio-info">
                                    <h4>
                                        <a href="/ordering_system/orderforStudent/StoreMeanu/@item.店家id" title="詳細商品">@item.店家名稱</a>
                                        <span class="ts-icon is-regular is-heart-icon" data-id="@item.店家id"></span>
                                    </h4>
                                    <span class="ts-text is-heavy is-mark is-medium">平均評價: </span>
                                    @if (@item.平均評論 == 0)
                                    {
                                        <span class="ts-badge is-secondary is-large" data-store-id="@item.店家id" data-feedback="新店家">新店家</span>
                                    }
                                    else
                                    {
                                        <span class="ts-badge is-secondary is-large" data-store-id="@item.店家id" data-feedback="@item.平均評論">@item.平均評論</span>

                                    }

                                    @foreach (var time in item.營業資料)
                                    {

                                        string[] daysOfWeek = time.星期.Split(",");
                                        bool isOpenDay = daysOfWeek.Contains(dayOfWeekString);
                                        string[] startTimeParts = time.開始營業時間.Split(':');
                                        string[] endTimeParts = time.結束營業時間.Split(':');
                                        int startHour = int.Parse(startTimeParts[0]);
                                        int startMinute = int.Parse(startTimeParts[1]);
                                        int endHour = int.Parse(endTimeParts[0]);
                                        int endMinute = int.Parse(endTimeParts[1]);
                                        bool isInOpeningHours = currentHour > startHour || (currentHour == startHour && currentMinute >= startMinute)
                                        && currentHour < endHour || (currentHour == endHour && currentMinute <= endMinute);
                                        status = isOpenDay && isInOpeningHours ? "營業中" : "準備中";
                                        if (isInOpeningHours && isOpenDay) { break; }

                                    }
                                    <span class="ts-icon is-end-spaced is-clock-icon"></span> <span class="ts-text is-underlined" data-store-id="@item.店家id" data-status="@status">@status</span>
                                    @if (@item.餐廳介紹.Length == 0)
                                    {
                                        <div class="ts-segment is-secondary is-light is-very-elevated" style="min-height:158.75px;">目前沒有簡介，快進來看看吧</div>
                                    }
                                    else
                                    {
                                        <div class="ts-segment is-secondary is-light is-very-elevated" style="min-height:158.75px;">@item.餐廳介紹</div>

                                    }
                                </div>
                            </div>
                        </div>

                        <!-- End Portfolio Item -->
                    }


                </div><!-- End Portfolio Container -->

            </div>
        </div>
    </section><!-- End 全部店家顯示 -->

</div>
@* 身體02 *@
<div id="searchbody" style="display:none">
    <div class="ts-divider"></div>

    <div class="ts-content is-center-aligned is-vertically-very-padded " style="background: var(--ts-gray-50)">

        <div class="ts-container is-narrow has-vertically-spaced">
            <div>
                <a class="ts-text is-undecorated is-start-aligned" href="/ordering_system/orderforStudent/Studentrestaurant">
                    <div class="ts-text is-secondary is-large">(返回首頁)</div>
                </a>
            </div>
            <div class="ts-header is-center-aligned is-huge is-heavy" id="keyword"></div>
            <div class="ts-text is-secondary is-big"><span id="counut"></span> 個結果</div>
        </div>
    </div>
    <div class="ts-divider"></div>
    <div class="ts-container is-narrow has-vertically-padded-big">
        <div class="ts-content is-center-aligned" style="display:none" id="loading">
            <span class="ts-icon is-spinning is-spinner-icon is-heading"></span>
        </div>
        <div class="ts-grid is-3-columns is-relaxed is-stretched" id="searchData">

            <div class="column">
                <div class="ts-box">
                    <div class="ts-image is-covered is-centered">
                        <a href="/ordering_system/orderforStudent/StoreMeanu/2">
                            <img src="~/images/t訂餐/店家照片/43d98cfe-5cb9-48b7-a37a-8136d529b6d5_images.png" />
                        </a>
                    </div>
                    <div class="ts-content">
                        <a class="ts-header is-heavy is-link" href="/ordering_system/orderforStudent/StoreMeanu/2">店家名稱</a>
                        <span class="ts-text is-heavy is-mark is-medium">平均評價: </span>
                        <span class="ts-badge is-secondary is-large">4.15</span>
                        <span class="ts-icon is-end-spaced is-clock-icon"></span> <span class="ts-text is-underlined">營業中</span>
                        <p>在 5 月之前於線上網路門市訂購，現在還特別加贈限量環保袋。</p>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@* 我的最愛 *@
<div class="offcanvas offcanvas-start" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasScrolling" aria-labelledby="offcanvasScrollingLabel">
    <div class="ts-app-topbar">
        <div class="start">
            <div class="ts-header is-big">我的最愛餐廳</div>
        </div>
        <div class="end">
            <a class="item">
                <span class="ts-close"></span>
            </a>
        </div>
    </div>
    <hr />
    <div class="offcanvas-body" id="favoriteStore">

        <div class="ts-box is-horizontal is-light mt-3">
            <div class="ts-image is-covered">
                <img src="~/images/t訂餐/店家照片/43d98cfe-5cb9-48b7-a37a-8136d529b6d5_images.png" style="width: 90px; height: 100%;" />
            </div>
            <div class="ts-content">
                <div class="ts-header">
                    海大王朋友飯店
                </div>
                <p>美式 日式 義式</p>
            </div>
            <div class="ts-content is-end-aligned">
                <div class="ts-header">
                    <button class="ts-button is-icon is-negative is-outlined is-circular">
                        <span class="ts-icon is-minus-icon"></span>
                    </button>
                </div>
            </div>
        </div>

        <div class="ts-box is-horizontal is-light mt-3">
            <div class="ts-image is-covered">
                <img src="~/images/t訂餐/店家照片/43d98cfe-5cb9-48b7-a37a-8136d529b6d5_images.png" style="width: 90px; height: 100%;" />
            </div>
            <div class="ts-content">
                <div class="ts-header">
                    海大王朋友飯店
                </div>
                <p>美式 日式 義式</p>
            </div>
            <div class="ts-content is-end-aligned">
                <div class="ts-header">
                    <button class="ts-button is-icon is-negative is-outlined is-circular">
                        <span class="ts-icon is-minus-icon"></span>
                    </button>
                </div>
            </div>
        </div>


    </div>
</div>
@* 購物車 *@
<div class="offcanvas offcanvas-end" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id="offcanvasScrollingCar" aria-labelledby="offcanvasScrollingLabel">
    <div class="ts-app-topbar">
        <div class="start">
            <div class="ts-header is-big">購物車</div>
        </div>
        <div class="end">
            <button type="button" class="text-reset btn-close btn-close-white" id="closebtn"></button>
        </div>
    </div>
    @* 購物車內容 *@
    <div class="offcanvas-body">
        <div class="container">
            <div class="ts-grid is-stacked">
                <div class="column is-2-wide">
                    <div class="ts-app-topbar" style="background-color: transparent;color: black;">
                        <div class="start">
                            <div class="ts-header is-big"><span id="Shoppingcount">0</span>項商品</div>
                        </div>
                        <div class="end">
                            <span class="ts-text is-heavy is-big">總計: <span class="ts-text is-editable" id="Shoppingtotail">$ 0</span></span>
                        </div>
                    </div>
                </div>
                <div class="column is-3-wide" id="ShoppingList">
                </div>
            </div>
        </div>
    </div>
    <footer>
        <div class="ts-wrap is-vertical is-light">
            <div class="ts-segment">
                <a asp-area="ordering_system" asp-controller="orderforStudent" asp-action="CreateOrder" class="ts-button is-fluid is-large">前往結帳</a>
            </div>
            <div class="ts-segment">
                <button class="ts-button is-fluid is-large" id="close02">新增商品</button>
            </div>
        </div>
    </footer>
</div>
@section Scripts {
    <script>
        let searchData = {
            "keyword": "",
        };
        const studentID = @User?.FindFirst("StudentId")?.Value;
        let FavoriteStorelist = [];
        (async () => {
            try {
                // 呼叫API获取数据
                const [/* storeStyle */ favoriteStorelist, bestStoreTop5, /* storeInformation */] = await Promise.all([
                    // $.ajax({ url: `@Url.Content("~/tOrder_StoreAPI/storeStyle")` }),
                    $.ajax({ url: `@Url.Content("~/api/StudentOrderAPI/favoriteStorelist")?id=${studentID}` }),
                    $.ajax({ url: '@Url.Content("~/tOrder_StoreAPI/bestStoreTop5")' }),
                    // $.ajax({ url: `@Url.Content("~/tOrder_StoreAPI/storeInformation")` })
                ]);
                // 处理收藏店家列表
                favoriteStorelist.店家列表.map(a => { FavoriteStorelist.push(a) })
                // 处理全部店家数据
                // const datalist = storeInformation.map(({ 店家id, 電話, 餐廳照片, 店家名稱, 餐廳介紹, 風味列表 }) => {
                //     const tag = 風味列表.map(b => `filter-${b}`).join(' ');
                //     const isFavorite = FavoriteStorelist.includes(店家id);
                //     const heartIconClass = isFavorite ? '' : 'is-regular';
                //     return (`
                //                                 <div class="col-xl-4 col-md-6 portfolio-item ${tag}">
                //                                     <div class="portfolio-wrap">
                //                                         <a href="/ordering_system/orderforStudent/StoreMeanu/${店家id}" data-gallery="portfolio-gallery-app" class="glightbox">
                //                                             <img src="${餐廳照片}" class="img-fluid" alt="${店家名稱}" />
                //                                         </a>
                //                                         <div class="portfolio-info">
                //                                             <h4>
                //                                                 <a href="/ordering_system/orderforStudent/StoreMeanu/${店家id}" title="詳細商品">${店家名稱}</a>
                //                                                 <span class="ts-icon ${heartIconClass} is-heart-icon" data-id="${店家id}"></span>
                //                                             </h4>
                //                                             <span class="ts-text is-secondary">平均評價</span>
                //                                             <span class="ts-badge is-secondary">4.5</span>
                //                                             <div class="ts-segment is-secondary is-light">${餐廳介紹}</div>
                //                                         </div>
                //                                     </div>
                //                                 </div><!-- End Portfolio Item -->
                //                             `);
                // });
                // $('#storeCard').html(datalist);

                // 处理热门店家数据
                const htmldata = bestStoreTop5.map(({ 店家名稱, 店家介紹, 店家圖片, 評價星數, 風味列表, 店家id }) => {
                    const starsHTML = '<i class="bi bi-star-fill"></i>'.repeat(評價星數);
                    const 風味列表html = 風味列表.map(b => `${b}&nbsp;`).join('');
                    return (`
                                                                        <div class="swiper-slide">
                                                                            <div class="testimonial-wrap">
                                                                                <div class="testimonial-item">
                                                                                    <div class="d-flex align-items-center">
                                                                                        <a href="/ordering_system/orderforStudent/StoreMeanu/${店家id}">
                                                                                           <img src="${店家圖片}" class="testimonial-img flex-shrink-0 img-fluid" alt="${店家名稱}" />
                                                                                        </a>
                                                                                        <div>
                                                                                          <a href="/ordering_system/orderforStudent/StoreMeanu/${店家id}">
                                                                                            <h3>${店家名稱}</h3>
                                                                                          </a>
                                                                                            ${風味列表html}
                                                                                            <div class="stars">${starsHTML}</div>
                                                                                        </div>
                                                                                    </div>
                                                                                    <p class="m-0">
                                                                                        <i class="bi bi-quote quote-icon-left"></i>
                                                                                        <h4>${店家介紹}</h4>
                                                                                        <i class="bi bi-quote quote-icon-right"></i>
                                                                                    </p>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    `);
                });
                $('#cardiv').html(htmldata);

                // 处理口味标签列
                // const daralist = storeStyle.map((a, index) => `<li data-filter=".filter-${a}">${a}</li>`);
                // const newElement = '<li data-filter="*" class="filter-active">All</li>';
                // $('#stylelist').prepend(newElement + daralist.join(''));
                favoriteStore();
                shoppingCart();
            }
            catch (error) {
                console.error('An error occurred:', error);
            }
        })();

        //點擊愛心將店家加入最愛
        $(document).on('click', 'span.is-heart-icon', function () {
            storeID = $(this).data('id');
            $(this).removeClass('is-regular');
            $.ajax({
                url: `@Url.Content("~/api/StudentOrderAPI/FavoriteStore")?id=${studentID}&storeID=${storeID}`,
                method: 'POST',
                success: () => {
                    favoriteStore();
                },
                error: () => { console.log('api載入中') }
            })
        });
        //點選關閉側邊最愛商店
        $(document).on('click', 'span.ts-close', function () {
            //$('#offcanvasScrolling').offcanvas('hide');
            $('#btnfavorite').click();
        })
        //輸入學生最愛店家列表
        const favoriteStore = () => {
            $.ajax({
                url: `@Url.Content("~/api/StudentOrderAPI/favoriteStorelist")?id=${studentID}`,
                success: (datas) => {
                    if (datas.店家資料.length == 0) {
                        const nullLove = `            <div class="ts-blankslate is-light">
                                                        <span class="ts-icon is-heart-icon"></span>
                                                        <div class="header" style="background-color:#ffff">目前還沒有加入最愛</div>
                                                        <div class="description">快去看看找你最愛的店家吧</div>
                                                    </div>`
                        $('#favoriteStore').html(nullLove);
                    }
                    else {
                        const dataslist = datas.店家資料.map(a => {
                            const { 店家名稱, 店家圖片, 風味列表, 店家ID } = a;
                            const plusIcon = $('.ts-icon.is-heart-icon[data-id="' + 店家ID + '"]');
                            plusIcon.removeClass('is-regular');
                            const tagname = 風味列表.map(b => b).join(',');
                            return (`
                                                              <div class="ts-box is-horizontal is-light mt-3">
                                                                <div class="ts-image is-covered">
                                                               <a href="/ordering_system/orderforStudent/StoreMeanu/${店家ID}">
                                                                    <img src="${店家圖片}" style="width: 90px; height: 100%;" />
                                                               </a>
                                                                </div>
                                                                <div class="ts-content">
                                                                    <a href="/ordering_system/orderforStudent/StoreMeanu/${店家ID}">
                                                                            <div class="ts-header">
                                                                            ${店家名稱}
                                                                            </div>
                                                                    </a>
                                                                <p>${tagname}</p>
                                                                </div>
                                                                <div class="ts-content is-end-aligned">
                                                                   <div class="ts-header is-end-aligned">
                                                                                <button class="ts-button is-icon is-negative is-outlined is-circular" onclick="delete01(${店家ID})">
                                                                            <span class="ts-icon is-minus-icon"></span>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                                `);
                        });
                        $('#favoriteStore').html(dataslist);
                    }
                },
                error: () => { console.log("錯誤問題") }
            })
        }
        //刪除學生最愛店家列表
        function delete01(ID) {
            $.ajax({
                url: `@Url.Content("~/api/StudentOrderAPI/favoriteStoredelete")?id=${studentID}&storeID=${ID}`,
                method: 'Delete',
                success: () => {
                    favoriteStore();
                    const plusIcon = $('.ts-icon.is-heart-icon[data-id="' + ID + '"]');
                    plusIcon.addClass('is-regular');
                },
                error: () => { console.log("失敗") }
            })
        }
        //載入學員是否已經有購物車
        const shoppingCart = () => {
            $.ajax({
                url: `@Url.Content("~/tOrder_StoreAPI/shoppingCar")?id=${studentID}`,
                success: (datas) => {
                    if (datas.待購物清單.length == 0) {
                        $('#Shoppingcount').text(0);
                        $('#Shoppingtotail').text(0);
                        const nulllist = ` <div class="ts-blankslate is-light">
                                                                        <span class="ts-icon is-cart-shopping-icon"></span>
                                                                        <div class="header" style="background-color:#ffff">購物車是空的</div>
                                                                        <div class="description">請購買些商品之後再回來查看</div>
                                                                        <div class="action">
                                                                            <button class="ts-button" id="close01">瀏覽商品</button>
                                                                        </div>
                                                                    </div>`;
                        $('#ShoppingList').html(nulllist);
                        $('#close01').click(() => {
                            close();
                        })
                    }
                    else {
                        $('#Shoppingcount').text(datas.筆數);
                        $('#Shoppingtotail').text(datas.總額);
                        const datalist = datas.待購物清單.map(a => {
                            const { 購物車ID, 餐點圖片, 餐點數量, 餐點名稱, 小計, 餐點ID } = a;
                            return (`
                                                                              <div class="ts-box is-horizontal is-light mt-3">
                                                                                <div class="ts-image is-covered">
                                                                                <img src="${餐點圖片}" style="width: 90px; height: 100%;" />
                                                                                </div>
                                                                                <div class="ts-content">
                                                                                    <div class="ts-header">
                                                                                        ${餐點名稱}
                                                                                    </div>
                                                                                    <p>小計:<span>$${小計}</span></p>
                                                                                </div>
                                                                                <div class="ts-content is-end-aligned" style="max-width:130px">
                                                                                    <div class="ts-header">
                                                                                        <p>數量</p>
                                                                                        <div class="ts-input is-circular">
                                                                                          <input type="number" value="${餐點數量}" data-id="${餐點ID}" min="0" max="100">
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        `);
                        })
                        $('#ShoppingList').html(datalist);
                    }
                    $('input[type="number"][data-id]').on('change', function () {
                        // 在這裡處理 input 值的變化
                        var newValue = $(this).val();
                        var 餐點 = $(this).data('id');
                        if (newValue != 0) {
                            $.ajax({
                                url: `@Url.Content("~/tOrder_StoreAPI/ModifyshoppingCar")?id=${studentID}&menuID=${餐點}&count=${newValue}`,
                                success: () => {
                                    const textshow = $('#text-' + 餐點);
                                    textshow.text(newValue);
                                    shoppingCart();
                                },
                                error: () => {
                                    console.log('api傳送失敗')
                                }
                            })
                        }
                        else {
                            const minusIcon = $('.ts-icon.is-minus-icon[data-id="' + 餐點 + '"]');
                            minusIcon.click();
                            $.ajax({
                                url: `@Url.Content("~/tOrder_StoreAPI/removeShoppingCar")?id=${studentID}&menuID=${餐點}`,
                                method: 'Delete',
                                success: () => {
                                    shoppingCart();
                                },
                                error: () => {
                                    console.log('api問題回報')
                                }
                            })
                        }
                    });
                },
                error: (xhr, status, error) => {
                    if (xhr.status == 404) {
                        console.log("目前沒有購物車，寫預設圖片")
                    } else {
                        console.log('Error:', error);
                    }
                }
            })
        }
        //關閉購物車
        $('#closebtn').click(() => {
            close();
        })
        $('#close02').click(() => {
            close();
        })
        //關閉購物車function
        const close = () => {
            $('#btncart').click();
        }
        $('#searchKeyWord').keyup((e) => {
            if (e.keyCode === 13) {
                search();
            }
        })
        const search = () => {
            const keyword = $('#searchKeyWord').val().trim();
            searchData.keyword = keyword;
            if (keyword.length == 0 || keyword == "") {
                $('#storebody').show();
                $('#searchbody').hide();
                $('#searchKeyWord').val("");
            }
            else {
                $('#searchData').html('');
                $('#storebody').hide();
                $('#loading').show();
                $.ajax({
                    url: `@Url.Content("~/tOrder_StoreAPI/storeSearch")`,
                    method: 'Post',
                    contentType: 'application/json',
                    data: JSON.stringify(searchData),
                    success: (datas) => {
                        const datalist = datas.vMstoreCarIndices.map(a => {
                            const { 店家id, 餐廳照片, 店家名稱, 餐廳介紹, 平均評論 } = a;
                            const storeId = $('.ts-text[data-store-id="' + 店家id + '"]');
                            const statusValue = storeId.attr('data-status');
                            const feedbackId = $('.ts-badge[data-store-id="' + 店家id + '"]');
                            const feedback = feedbackId.attr('data-feedback');
                            const isFavorite = FavoriteStorelist.includes(店家id);
                            const heartIconClass = isFavorite ? '' : 'is-regular';
                            return (`
                                                              <div class="column">
                                                                <div class="ts-box">
                                                                    <div class="ts-image is-covered is-centered">
                                                                        <a href="/ordering_system/orderforStudent/StoreMeanu/${店家id}">
                                                                        <img src="${餐廳照片}"style="height:239.57px" />
                                                                        </a>
                                                                    </div>
                                                                    <div class="ts-content">
                                                                        <a class="ts-header is-heavy is-link" href="/ordering_system/orderforStudent/StoreMeanu/${店家id}">${店家名稱}</a>
                                                                        <span class="ts-icon ${heartIconClass} is-heart-icon" data-id="${店家id}"></span>
                                                                        <span class="ts-text is-heavy is-mark is-medium">平均評價: </span>
                                                                        <span class="ts-badge is-secondary is-large">${feedback}</span>
                                                                        <span class="ts-icon is-end-spaced is-clock-icon"></span> <span class="ts-text is-underlined">${statusValue}</span>
                                                                        <p>${餐廳介紹}</p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                                `)
                        });//datalist結束
                        $('#searchData').html(datalist);
                        $('#keyword').text('「' + `${keyword}` + '」');
                        $('#counut').text(datalist.length);
                        $('#searchKeyWord').val("");
                        $('#loading').hide();
                        $('#searchbody').show();
                    },
                    error: () => {
                        console.log('搜尋問題')
                    }
                })
            }
        }
        let key = '@Html.Raw(ViewData["searchKeyWord"])';
        if (key != null) {
            $('#searchKeyWord').val(key);
            search();
        }
    </script>
}
